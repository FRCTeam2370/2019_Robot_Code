// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2370.RobotV1.subsystems;

import org.usfirst.frc2370.RobotV1.Robot;
import org.usfirst.frc2370.RobotV1.RobotMap;
import org.usfirst.frc2370.RobotV1.commands.*;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Shooter extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon leftShooterMotor = RobotMap.shooterLeftShooterMotor;
    private final CANTalon rightShooterMotor = RobotMap.shooterRightShooterMotor;
    private final AnalogInput distanceSensor1 = RobotMap.shooterDistanceSensor1;
    private final SpeedController roller = RobotMap.shooterRoller;
    private final SpeedController backRoller = RobotMap.shooterBackRoller;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    	//setDefaultCommand() ;
    }
    
   public void Shoot()
   {
	   leftShooterMotor.set(-1.0);
	   rightShooterMotor.set(-1.0);
	   roller.set(-1.0);
	   backRoller.set(-1.0);
   }
    
   
   public void Suck()
   {
	   leftShooterMotor.set(1.0);
	   rightShooterMotor.set(1.0);
	   roller.set(1.0);
	   backRoller.set(1.0);
   }
   
   public void StopShooter()
   {
	   roller.set(0.0);
	   backRoller.set(0.0);
	   leftShooterMotor.set(0.0);
	   rightShooterMotor.set(0.0);
   }
    
}

